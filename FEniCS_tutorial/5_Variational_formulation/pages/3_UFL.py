import streamlit as st


r"""
# UFL

Unified Form Language (UFL) - специальный язык, ориентированный на предметную область, для определения дискретных
вариационных форм и функционалов в обозначениях близких к математическим.

- v, c, f  - скалярные функции.


## Представление интегралов

Объект, представляющий интеграл, записывается как выражение умноженное на меру.

### Интеграл по объёму
"""

col = st.columns(2)

with col[0]:
    r"""
    $$
    \int \limits_\Omega v \ d \bm{x}
    $$
    """
with col[1]:
    r"""
    ```python
    v * dx
    ```
    """


"""
### Интеграл по границе
"""

col = st.columns(2)

with col[0]:
    r"""
    $$
    \int \limits_{\partial \Omega} v \ d \bm{x}
    $$
    """
with col[1]:
    r"""
    ```python
    v * ds
    ```
    """

r"""
Интеграл по множеству внутренних граней (интерфейсный):

```python
v * dS
```

Меры могут быть переопределены для представления интегралов по частям объема и границ. Например,

```python
c*dx + v*ds(0) + f*ds(1)
```

эквивалентно

$$
\int \limits_\Omega c \ dx + \int \limits_{\partial \Omega_0} v \ ds + \int \limits_{\partial \Omega_1} f \ ds.
$$

Численное вычисление реализовано функцией `assemble()`. Например, вычисление $\displaystyle \int \limits_\Omega c\ dx$:

```python
assemble(c*dx)
```


## Производные

В FEniCS координаты `x[0], x[1], ..., x[n-1]` соответствуют координатам $x_1, x_2, \dots, x_n$.

Производная функции v по координате с "номером" k:

```python
Dx(v, k)
```

или

```python
v.dx(k)
```


## Градиент

```python
grad(f)
```


## Дивергенция

```python
div(v)
```


## Ротор

В UFL следующие объявления эквивалентны:

```python
curl(v)
rot(v)
```

## Скалярное произведение

```python
dot(a, b)
```

## Внутреннее произведение

```python
inner(a, b)
```

Если $A$ и $B$ - тензоры 2-го ранга, а $C$ и $D$ - тензоры 3-го ранга, то их внутренние произведения равны:

$$
\begin{aligned}
& A : B = A_{ij} B_{ij}^*,
\\[0.5 cm]
& C : D = C_{ijk} D_{ijk}^*;
\end{aligned}
$$

где * - комплексное сопряженное.
"""
